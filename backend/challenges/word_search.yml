challenge:
  name: "Word Search"
  date: "2025-02-15"
  function:
    name: "exist"
    parameters: ["board", "word"]
  prompt: |
    given an m x n grid of characters board and a string word, return true if the word exists in the grid.
    The word can be constructed from letters of sequentially adjacent cells, where adjacent cells are horizontally or vertically neighboring.
    The same letter cell may not be used more than once. Good luck.

  cases:
    - prompt: "Search for 'ABCCED' in the grid (base case: word exists straightforwardly)"
      given_data: "[[\"A\",\"B\",\"C\",\"E\"],[\"S\",\"F\",\"C\",\"S\"],[\"A\",\"D\",\"E\",\"E\"]], \"ABCCED\""
      expected: "true"

    - prompt: "Search for 'SEE' in the grid (edge case: word uses multiple directions)"
      given_data: "[[\"A\",\"B\",\"C\",\"E\"],[\"S\",\"F\",\"C\",\"S\"],[\"A\",\"D\",\"E\",\"E\"]], \"SEE\""
      expected: "true"

    - prompt: "Search for 'ABCB' in the grid (edge case: word is not in the grid)"
      given_data: "[[\"A\",\"B\",\"C\",\"E\"],[\"S\",\"F\",\"C\",\"S\"],[\"A\",\"D\",\"E\",\"E\"]], \"ABCB\""
      expected: "false"

    - prompt: "Search for 'ABCDEFG' in the grid (edge case: word longer than any row/column)"
      given_data: "[[\"A\",\"B\",\"C\"],[\"D\",\"E\",\"F\"]], \"ABCDEFG\""
      expected: "false"
